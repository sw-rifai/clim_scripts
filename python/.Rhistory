curve(0**x,0.00001,0.001)
curve(2**x,-2,2)
curve(2**x*0.5,-2,2)
curve(2**x**x,-2,2)
curve(2**x**x,0,2)
curve(2**x**x**x,0,2)
library(tidyverse);
library(lubridate);
library(mgcv)
## simulate data with concurvity...
set.seed(8);n<- 200
f2 <- function(x) 0.2 * x^11 * (10 * (1 - x))^6 + 10 *
(10 * x)^3 * (1 - x)^10
t <- sort(runif(n)) ## first covariate
## make covariate x a smooth function of t + noise...
x <- f2(t) + rnorm(n)*3
## simulate response dependent on t and x...
y <- sin(4*pi*t) + exp(x/20) + rnorm(n)*.3
## fit model...
b <- gam(y ~ s(t,k=15) + s(x,k=15),method="REML")
t
x
cor(t,x)
## assess concurvity between each term and `rest of model'...
concurvity(b)
## ... and now look at pairwise concurvity between terms...
concurvity(b,full=FALSE)
library(pls);data(gasoline);gas <- gasoline
install.packages('pls')
library(pls);data(gasoline);gas <- gasoline
gas
gas$nm <- t(matrix(nm,length(nm),length(gas$octane)))
nm <- seq(900,1700,by=2) ## create wavelength matrix...
gas$nm <- t(matrix(nm,length(nm),length(gas$octane)))
gas
str(gas)
gas$octane
gas$nm
gas$NIR
b <- gam(octane~s(nm,by=NIR,bs="ad"),data=gas)
plot(b,rug=FALSE,shade=TRUE,main="Estimated function")
plot(fitted(b),gas$octane,...)
plot(fitted(b),gas$octane)
str(gas)
nm <- seq(900,1700,by=2) ## create wavelength matrix...
nm
library(pls);data(gasoline);gas <- gasoline
gas$octane
gas$nm <- t(matrix(nm,length(nm),length(gas$octane)))
gas$nm
gas$nm %>% dim
nm
library(pls);data(gasoline);gas <- gasoline
gas
gas$NIR
gas$NIR %>% str
vec_med <- c(0.5,0.5,0.5)
prod(vec_med)
prod(vec_med)/sum(vec_med)
log(vec_med)
sum(log(vec_med))
runif(0,0.5,3)
runif(3,0,0.5)
sum(log(vec_med))
sum(log(runif(3,0,0.5)))
sum(log(runif(3,0,0.5)))
matrix(runif(300,0,0.5),ncol = 3)
log(matrix(runif(300,0,0.5),ncol = 3))
rowsum(log(matrix(runif(300,0,0.5),ncol = 3)))
rowsum
rowSums(log(matrix(runif(300,0,0.5),ncol = 3)))
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% hist
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% summary
sum(log(vec_med))
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% density %>% plot
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% hist %>% plot
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% hist(breaks=100)
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>% hist(xlim=c(-10,0))
abline(v=sum(log(runif(3,0,0.5))),col='red')
abline(v=sum(log(vec_med)),col='red')
rowSums(log(matrix(runif(300,0,0.5),ncol = 3))) %>%
hist(xlim=c(-10,0), breaks=100)
abline(v=sum(log(vec_med)),col='red')
rowSums(log(matrix(runif(3000,0,0.5),ncol = 3))) %>%
hist(xlim=c(-10,0), breaks=100)
abline(v=sum(log(vec_med)),col='red')
rgamma(100, 0.5, 5)
rgamma(100, 0.5, 5) %>% hist
quantile(rgamma(100, 0.5, 5), 0.95)
quantile(matrix(rgamma(1000, 0.5, 5), ncol = 10), 0.95)
matrix(rgamma(1000, 0.5, 5), ncol = 10)
apply(matrix(rgamma(1000, 0.5, 5), ncol = 10), 1, function(x) quantile(x,0.95))
apply(matrix(rgamma(1000, 0.5, 5), ncol = 10), 1, function(x) quantile(x,0.95)) %>%
sum
apply(matrix(rgamma(1000, 0.5, 5), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 5) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
apply(matrix(rgamma(1000, 0.5, 5), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
rgamma(100, 0.5, 0.95) %>% sum
?rgamma
shape <- 0.5; rate=1
apply(matrix(rgamma(1000, shape, rate), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
apply(matrix(rgamma(1000, shape, rate), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
rgamma(100, shape, rate) %>% sum
rgamma(100, shape, rate) %>% sum
rgamma(100, shape, rate) %>% sum
rgamma(10000, shape, rate) %>% hist
shape/rate
rgamma(10000, shape, rate) %>% mean
apply(matrix(rgamma(1000, shape, rate), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
rgamma(100, shape, rate) %>% sum
?rlnorm
hist(rlnorm(1000, meanlog = 0, sdlog = 0.1))
hist(rlnorm(1000, meanlog = 0, sdlog = 0.1) %>% exp)
hist(rlnorm(1000, meanlog = 0, sdlog = 0.5) %>% exp)
summary(rlnorm(1000, meanlog = 0, sdlog = 0.5) %>% exp)
apply(matrix(rgamma(1000, shape, rate), ncol = 10),
1, function(x) quantile(x,0.95)) %>% sum
rgamma(100, shape, rate) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 distributions
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
#
qunatile(rgamma(100, shape, rate), 0.95)*100
#
quantile(rgamma(100, shape, rate), 0.95)*100
#
quantile(rgamma(100, shape, rate), 0.95)*100
#
quantile(rgamma(100, shape, rate), 0.95)*100
#
quantile(rgamma(100, shape, rate), 0.95)*100
#
quantile(rgamma(100, shape, rate), 0.95)*100
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# the 95th quantile of one distribution multiplied by the number of groups
quantile(rgamma(100, shape, rate), 0.95)*100
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 groups with the same distribution
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
?simulate
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
# sum the 95th quantile of 100 groups with the same distribution
apply(100, 1, function(){
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
})
# sum the 95th quantile of 100 groups with the same distribution
apply(100, 1, function(x){
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
})
?lapply
# sum the 95th quantile of 100 groups with the same distribution
replicate(100, function(x){
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
})
# sum the 95th quantile of 100 groups with the same distribution
replicate(100,
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
)
# sum the 95th quantile of 100 groups with the same distribution
replicate(100,
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
) %>% hist
# the 95th quantile of one distribution multiplied by the number of groups
replicate(quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>% hist
# the 95th quantile of one distribution multiplied by the number of groups
replicate(100, expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>% hist
# sum the 95th quantile of 100 groups with the same distribution
replicate(100,
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
) %>% summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(100,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# sum the 95th quantile of 100 groups with the same distribution
replicate(1000,
apply(matrix(rgamma(1000, shape, rate), nrow = 100),
1, function(x) quantile(x,0.95)) %>% sum
) %>% summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
# the 95th quantile of one distribution multiplied by the number of groups
replicate(1000,
expr=quantile(rgamma(100, shape, rate), 0.95)*100, 100) %>%
summary
library(INLA)
?inla.list.models
inla.list.models()
inla.doc('slm')
inla.doc('ar1c')
curve(log((1+x)/(1-x)),0,1)
curve(log((1+x)/(1-x)),0,5)
curve(log((1+x)/(1-x)),0,2)
curve(log((1+x)/(1-x)),-2,2)
inla.doc('ar1')
curve(log((1+x)/(1-x)),0.01,2)
curve(log((1+x)/(1-x)),0.01,0.999)
curve(sqrt(log((1+x)/(1-x))),0.01,0.999)
inla.doc('besag')
10**4.5
100*10**4.5
100*10**4
library(lubridate)
yday(279)
?yday
day(279)
md
wday(1)
wday(279)
279/365
2000+279/365
date_decimal(2000+279/365)
library(INLA)
tmp <- tibble(x = rgamma(100, shape = 3, rate=2.1))
library(INLA); library(tidyverse)
tmp <- tibble(x = rgamma(100, shape = 3, rate=2.1))
mean(tmp$x)
3/2.1
var(tmp$x)
?rgamma
3*2.1
3*(1/2.1)
3*(1/2.1)**2
var(tmp$x)
var(rgamma(100, shape = 3, scale = 1/2.1))
var(rgamma(100, shape = 3, scale = 1/2.1))
var(rgamma(100, shape = 3, scale = 1/2.1))
var(rgamma(100, shape = 3, scale = 1/2.1))
var(rgamma(100, shape = 3, scale = 1/2.1))
var(rgamma(10000, shape = 3, scale = 1/2.1))
var(rgamma(10000, shape = 3, scale = 1/2.1))
var(rgamma(10000, shape = 3, scale = 1/2.1))
var(rgamma(10000, shape = 3, scale = 1/2.1))
tmp <- tibble(x = rgamma(100, shape = 3, rate=2.1))
mean(tmp$x)
3/2.1
3*2.1
3*(1/2.1)**2
3*(1/2.1)**2
var(tmp$x)
glm(x~1, data=tmp)
glm(x~1, data=tmp) %>% summary
glm(x~1, data=tmp, family=Gamma(link='log')) %>% summary
exp(0.367)
3/2.1
3*(1/2.1)**2
sqrt(3*(1/2.1)**2)
1/3.55
1/0.355
glm(x~1, data=tmp, family=Gamma(link='identity')) %>% summary
3*(1/2.1)
glm(x~1, data=tmp, family=Gamma(link='identity')) %>% plot
library(bbmle)
fn <- function(x, alpha, beta){
return(dgamma(x,shape=alpha, rate=beta, log=T))
}
fn(tmp$x, alpha=0.5, beta=0.2)
fn <- function(x, alpha, beta){
return(sum(dgamma(x,shape=alpha, rate=beta, log=T)))
}
fn(tmp$x, alpha=0.5, beta=0.2)
bbmle::mle2(fn(x), start=list('alpha'=1, 'beta'=1))
?mle2
bbmle::mle2(fn(x,alpha,beta), start=list('alpha'=1, 'beta'=1),
data=tmp)
bbmle::mle2(fn, start=list('alpha'=1, 'beta'=1),
data=tmp)
fn <- function(x, alpha, beta){
return(-sum(dgamma(x,shape=alpha, rate=beta, log=T)))
}
fn(tmp$x, alpha=0.5, beta=0.2)
bbmle::mle2(fn, start=list('alpha'=1, 'beta'=1),
data=tmp)
fit <- bbmle::mle2(fn, start=list('alpha'=1, 'beta'=1),
data=tmp)
summary(fit)
profile(fit)
profile(fit) %>% plot
fn <- function(x, alpha, beta, alpha2, beta2){
return(-sum(dgamma(x,shape=alpha, rate=beta, log=T)+
dgamma(x,shape=alpha2, beta2)))
}
tmp <- tibble(x = rgamma(100, shape = 3, rate=2.1)+
rgamma(100, shape = 5, rate=0.5))
fn(tmp$x, alpha=0.5, beta=0.2, alpha2=5, rate=1)
fn(tmp$x, alpha=0.5, beta=0.2, alpha2=5, beta2=1)
fit <- bbmle::mle2(fn, start=list('alpha'=1, 'beta'=1,
'alpha2'=1, 'beta2'=1),
data=tmp)
warnings()
summary(fit)
hist(dat$x)
hist(tmp$x)
hist(rgamma(100, shape=3, rate=2.1))
hist(rgamma(100, shape=5, rate=0.5))
hist(rgamma(100, shape=3, rate=2.1))
hist(rgamma(100, shape=5, rate=0.5))
hist(rgamma(100, shape=3, rate=2.1))
hist(rgamma(100, shape=100, rate=50))
hist(rgamma(100, shape=3, rate=2.1))
hist(rgamma(100, shape=100, rate=5))
hist(rgamma(100, shape=3, rate=2.1)+rgamma(100, shape=100, rate=5))
hist(rgamma(100, shape=3, rate=2.1))
hist(rgamma(100, shape=100, rate=5))
hist(rgamma(100, shape=3, rate=2.1)+rgamma(100, shape=100, rate=5))
## avoid spurious accuracy
op <- options(digits = 3)
set.seed(123)
x <- rgamma(100, shape = 5, rate = 0.1)
fitdistr(x, "gamma")
library(MASS)
## avoid spurious accuracy
op <- options(digits = 3)
set.seed(123)
x <- rgamma(100, shape = 5, rate = 0.1)
fitdistr(x, "gamma")
## now do this directly with more control.
fitdistr(x, dgamma, list(shape = 1, rate = 0.1), lower = 0.001)
options(op)
op
xpop <- rgamma(1e6, shape=1, rate=0.5)
hist(xpop)
summary(xpop)
sample.int(1e6, 10)
boxplot(xpop)
??boot
590*2
install.packages("arrow", repos = "https://dl.bintray.com/ursalabs/arrow-r")
install.packages('bit64')
install.packages("arrow", repos = "https://dl.bintray.com/ursalabs/arrow-r")
library(arrow)
?arrow::read_parquet
df <- read_parquet(system.file("v0.7.1.parquet", package="arrow"))
head(df)
?arrow::write_parquet
tf1 <- tempfile(fileext = ".parquet")
write_parquet(data.frame(x = 1:5), tf1)
# using compression
tf2 <- tempfile(fileext = ".gz.parquet")
write_parquet(data.frame(x = 1:5), tf2, compression = "gzip", compression_level = 5)
which R
system("which R")
c(6,19,75,10.4,31,35,10,14.5,29.5,10,6,5,39,27,32,15,11,
9,20,16,10,9,7,3,14.5)
library(tidyverse)
c(6,19,75,10.4,31,35,10,14.5,29.5,10,6,5,39,27,32,15,11,
9,20,16,10,9,7,3,14.5) %>%
sum
463/25
19*30.4
19*30.4 + 1200
4900- (19*30.4 + 1200)
curve(exp(-x),0,10)
24*30.4
1.3247*27948
220*4 # landlord insurance
# rental income
c(
800, # April 1   # April rent
850, # April 30  # May rent
850, # June 3    # June rent
850, # July 1    # July rent
850, # August 1  # August rent
850, # Sep 3     # Sep rent
850, # Oct 1     # Oct rent
850, # Nov 4     # Nov rent
850 # Dec 3     # Dec rent
)
library(tidyverse)
# rental income
c(
800, # April 1   # April rent
850, # April 30  # May rent
850, # June 3    # June rent
850, # July 1    # July rent
850, # August 1  # August rent
850, # Sep 3     # Sep rent
850, # Oct 1     # Oct rent
850, # Nov 4     # Nov rent
850 # Dec 3     # Dec rent
) %>% sum
220*4 # landlord insurance
c(
1150, # Feb 15 2019 - Paula Tester
1671, # Feb 19 2019 - Paula Tester
2949, # Feb 28 2019 - Paula Tester
332  # Aug 2 2019 - Paula Tester, paying for HVAC repair
)
c(
1150, # Feb 15 2019 - Paula Tester
1671, # Feb 19 2019 - Paula Tester
2949, # Feb 28 2019 - Paula Tester
332  # Aug 2 2019 - Paula Tester, paying for HVAC repair
) %>% sum
ymd("2019-04-27")-ymd("2019-04-10")
library(lubridate)
ymd("2019-04-27")-ymd("2019-04-10")
ymd("2019-31-27")-ymd("2019-05-10")
ymd("2019-12-31")-ymd("2019-12-05")
29+18
18+1+1+27
10/5000
100 * 10/5000
100 * 20/5000
17/130
?geom_density
library(tidyverse)
?geom_density
reticulate::repl_python()
setwd("~/srifai@gmail.com/work/research/clim_scripts/python")
reticulate::repl_python()
